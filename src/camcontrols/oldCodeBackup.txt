    
//test buttons
    @FXML
    private Button btnCamera1Bigger;

    @FXML
    private Button btnCamera2Bigger;

    @FXML
    private Button btnCamera3Bigger;

    @FXML
    private Button btnCamera4Bigger;

    @FXML
    private Button btnDefaultCameraSize;

    @FXML
    private Button btnTestStream;


    private void resizGrid(){
 
         ColumnConstraints col1 = new ColumnConstraints();
         col1.setPercentWidth(75);
         ColumnConstraints col2 = new ColumnConstraints();
         col2.setPercentWidth(25);
         cameraGrid.getColumnConstraints().clear();
         cameraGrid.getColumnConstraints().addAll(col1,col2);

         RowConstraints row1 = new RowConstraints();
         row1.setPercentHeight(75);
         RowConstraints row2 = new RowConstraints();
         row2.setPercentHeight(25);
         cameraGrid.getRowConstraints().clear();
         cameraGrid.getRowConstraints().addAll(row1,row2);
         
    }
    
 /* if (mouseEvent.getButton().equals(MouseButton.PRIMARY)) {
         if (this.cam1.isIsFocused() && this.cam1.isIsHighlighted()) {
         //TODO(Dominik): maybe move camera focusing into motionCamera?
         this.setDefaultGrid(colCon1, colCon2, row1Con, row2Con);
         this.cam1.setIsFocused(false);
         } else if (!this.cam1.isIsFocused() && this.cam1.isIsHighlighted()) {
         //TODO(Dominik): Create makeBigger method for cameras and get rid of button methods
         this.handleButtonCam1Bigger(null);
         this.cam1.setIsFocused(true);

         }
         }*/



    /**
     *
     * @param event
     */
    @FXML
    private void handleCam1HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane1.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam1UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane1.setStyle("-fx-background-color: black;");
    }

    /**
     *
     * @param event
     */
    @FXML
    private void handleCam2HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane2.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam2UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane2.setStyle("-fx-background-color: black;");
    }
    
    /**
     *
     * @param event
     */
    @FXML
    private void handleCam3HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane3.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam3UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane3.setStyle("-fx-background-color: black;");
    }
    
    /**
     *
     * @param event
     */
    @FXML
    private void handleCam4HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane4.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam4UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane4.setStyle("-fx-background-color: black;");
    }
    