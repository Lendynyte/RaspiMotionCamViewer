
        /*   this.imageView1.preserveRatioProperty().setValue(Boolean.FALSE);
         this.imageView2.preserveRatioProperty().setValue(Boolean.FALSE);
        
         this.pane1.setMinWidth(1280/2);
         this.pane2.setMinWidth(1280/2);
         //TODO(Dominik):change to relative coordinates later or change anchor pane for smthing else
         this.imageView1.setFitWidth(this.pane1.getWidth());
         this.imageView1.setFitHeight(this.mainPane.getHeight()-40);
        
         this.imageView2.setFitWidth(this.pane2.getWidth());
         this.imageView2.setFitHeight(this.mainPane.getHeight()-40);
        
         //  this.imageView1.fitWidthProperty().bind(this.pane1.widthProperty());
         //   this.imageView2.fitWidthProperty().bind(this.pane2.widthProperty());*/
        //TODO(Dominik):fix in scene editor later
        //this.pane1.fillWidthProperty().setValue(Boolean.TRUE);


//TODO(Dominik):Maybe make this as fxml window too ?
    /**
     * This methods show basic about popup window
     *
     */
    public void createAboutWindow()
    {
        //initialize dialog
        Stage stage = new Stage();
        stage.initStyle(StageStyle.UTILITY);

        //Create button
        Button btnClose = new Button("Close");
        btnClose.setAlignment(Pos.BOTTOM_CENTER);

        //hand close operation of the button
        btnClose.setOnAction(new EventHandler<ActionEvent>()
        {
            @Override
            public void handle(ActionEvent event)
            {
                System.out.println("Closing the about window...");
                stage.close();
            }
        });

        //create Label with about
        Label lbl = new Label("Help Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\nHelp Help\n");

        //put vBox in stage
        VBox vbHelp = new VBox();
        vbHelp.setSpacing(50);

        //set everything to center and make tex label expand
        VBox.setVgrow(lbl, Priority.ALWAYS);
        vbHelp.alignmentProperty().set(Pos.TOP_CENTER);

        //add everzthing to vBox
        vbHelp.getChildren().addAll(lbl, btnClose);

        //add everything to scene
        Scene scene = new Scene(vbHelp, 200, 250);

        //show dialog
        stage.setScene(scene);
        stage.setTitle("Help");
        stage.show();
    }    



<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import java.lang.*?>
<?import java.util.*?>
<?import javafx.scene.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>


<AnchorPane id="AnchorPane" fx:id="mainPane" prefHeight="400.0" prefWidth="600.0" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/8" fx:controller="camcontrols.FXMLOptionsController">
    <children>
        <VBox layoutX="259.0" layoutY="71.0" prefHeight="400.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
            <children>
                <TabPane prefHeight="200.0" prefWidth="200.0" tabClosingPolicy="UNAVAILABLE" VBox.vgrow="ALWAYS">
                    <tabs>
                        <Tab text="Cam1">
                            <content>
                                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="185.0" prefWidth="600.0" style="-fx-background-color: RED;" />
                            </content>
                        </Tab>
                        <Tab text="Cam2">
                            <content>
                                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" style="-fx-background-color: blue;" />
                            </content>
                        </Tab>
                        <Tab text="Cam3">
                            <content>
                                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" style="-fx-background-color: green;" />
                            </content>
                        </Tab>
                        <Tab text="Cam4">
                            <content>
                                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" style="-fx-background-color: yellow;" />
                            </content>
                        </Tab>
                    </tabs>
                </TabPane>
                <AnchorPane prefHeight="30.0" prefWidth="200.0" style="-fx-background-color: purple;">
                    <children>
                        <HBox alignment="CENTER" layoutX="177.0" layoutY="-34.0" prefHeight="66.0" prefWidth="600.0" spacing="20.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
                            <children>
                                <Button fx:id="applyButton" mnemonicParsing="false" onAction="#handleButtonApplyButton" text="Apply" />
                                <Button fx:id="cancelButton" mnemonicParsing="false" onAction="#handleButtonCancelButton" text="Cancel" />
                            </children>
                            <opaqueInsets>
                                <Insets />
                            </opaqueInsets>
                        </HBox>
                    </children>
                </AnchorPane>
            </children>
        </VBox>
    </children>
</AnchorPane>

//test buttons
    @FXML
    private Button btnCamera1Bigger;

    @FXML
    private Button btnCamera2Bigger;

    @FXML
    private Button btnCamera3Bigger;

    @FXML
    private Button btnCamera4Bigger;

    @FXML
    private Button btnDefaultCameraSize;

    @FXML
    private Button btnTestStream;


    private void resizGrid(){
 
         ColumnConstraints col1 = new ColumnConstraints();
         col1.setPercentWidth(75);
         ColumnConstraints col2 = new ColumnConstraints();
         col2.setPercentWidth(25);
         cameraGrid.getColumnConstraints().clear();
         cameraGrid.getColumnConstraints().addAll(col1,col2);

         RowConstraints row1 = new RowConstraints();
         row1.setPercentHeight(75);
         RowConstraints row2 = new RowConstraints();
         row2.setPercentHeight(25);
         cameraGrid.getRowConstraints().clear();
         cameraGrid.getRowConstraints().addAll(row1,row2);
         
    }
    
 /* if (mouseEvent.getButton().equals(MouseButton.PRIMARY)) {
         if (this.cam1.isIsFocused() && this.cam1.isIsHighlighted()) {
         //TODO(Dominik): maybe move camera focusing into motionCamera?
         this.setDefaultGrid(colCon1, colCon2, row1Con, row2Con);
         this.cam1.setIsFocused(false);
         } else if (!this.cam1.isIsFocused() && this.cam1.isIsHighlighted()) {
         //TODO(Dominik): Create makeBigger method for cameras and get rid of button methods
         this.handleButtonCam1Bigger(null);
         this.cam1.setIsFocused(true);

         }
         }*/



    /**
     *
     * @param event
     */
    @FXML
    private void handleCam1HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane1.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam1UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane1.setStyle("-fx-background-color: black;");
    }

    /**
     *
     * @param event
     */
    @FXML
    private void handleCam2HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane2.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam2UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane2.setStyle("-fx-background-color: black;");
    }
    
    /**
     *
     * @param event
     */
    @FXML
    private void handleCam3HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane3.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam3UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane3.setStyle("-fx-background-color: black;");
    }
    
    /**
     *
     * @param event
     */
    @FXML
    private void handleCam4HighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane4.setStyle("-fx-background-color: orange;");
    }

    /**
     *
     * @param mouseEvent
     */
    @FXML
    private void handleCam4UnHighlightEvent(final MouseEvent mouseEvent)
    {
        this.pane4.setStyle("-fx-background-color: black;");
    }
    